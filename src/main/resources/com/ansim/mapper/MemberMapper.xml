<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ansim.mapper.MemberMapper">
    <resultMap type="com.ansim.app.domain.MemberVO" id="memberMap">
        <id     property="userId"       column="userId"/>
        <result property="userName"     column="userName"/>
        <result property="password"     column="password"/>
        <result property="email"        column="email"/>
        <result property="cellNo"       column="cellNo"/>
        <result property="uuid"         column="uuid"/>
        <result property="otpKey"       column="otpKey"/>
        <result property="positionId"   column="positionId"/>
        <result property="status"       column="status"/>
        <result property="salt"         column="salt"/>
        <result property="createDate"   column="createDate"/>
        <result property="updateDate"   column="updateDate"/>
        <result property="deleteDate"   column="deleteDate"/>

        <association
                property="position"
                column="{positionId = positionId}"
                javaType="com.ansim.app.domain.PositionVO"
                select="getMemberPosition"
        />

        <collection
                property="authList"
                column="{userId = userId}"
                javaType="java.util.ArrayList"
                ofType="com.ansim.app.domain.AuthVO"
                select="getMemberAuthList"
        />
    </resultMap>

    <select id="getMemberPosition" resultType="com.ansim.app.domain.PositionVO">
        select * from table_position where positionId = #{positionId}
    </select>

    <select id="getMemberAuthList" resultType="com.ansim.app.domain.AuthVO">
        select * from table_auth where userid = #{userId}
    </select>

    <select id="isInstalled" resultType="boolean">
        <![CDATA[
        select
            if(count(*) > 0, 1, 0)
        from
            table_member member
            inner join
            table_agent agent
            on member.userid = agent.userid
        where
            agent.createdate is not null
            and
            agent.status = 'N'
        ]]>
    </select>

    <select id="readSetupMember" resultMap="memberMap">
        select
            member.*
        from
            table_member member
            inner join
            table_auth auth
            on (auth.userid = member.userid and auth.auth = 'ROLE_ADMIN')
        where
            member.deletedate is null
        order by
            member.createdate asc
        limit 1 offset 0
    </select>

    <select id="readMember" resultMap="memberMap">
        select
            *
        from
            table_member
        where
            1 = 1
        <if test="userId != null and userId != ''.toString()">
            and
            userid = #{userId}
        </if>
        <if test="email != null and email != ''.toString()">
            and
            email = #{email}
        </if>
        <if test="includeDeleted == false">
            and
            deletedate is null
        </if>
    </select>

    <insert id="insertMemberAuth">
        insert into table_auth
        (userid, auth, createdate)
        values
        (#{userId}, #{auth}, now())
    </insert>

    <delete id="deleteMemberAuth">
        delete from table_auth where userid = #{userId} and auth = #{auth}
    </delete>

    <insert id="insertMember">
        insert into table_member
            (userid, username, password, email, cellno, uuid, otpkey, positionid, status, salt, createdate, updatedate, deletedate)
        values
            (#{userId}, #{userName}, #{password}, #{email}, #{cellNo}, #{uuid}, #{otpKey}, #{positionId}, #{status}, #{salt}, now(), now(), null);

        <if test="authList != null">
            <foreach collection="authList" item="auth" index="index">
                insert into table_auth
                (userid, auth, createdate)
                values
                (#{auth.userId}, #{auth.auth}, now());
            </foreach>
        </if>
    </insert>

    <update id="updateSetupAdmin">
        update table_member
        set
            userid = #{userId},
            username = #{userName},
            password = #{password},
            email = #{email},
            cellno = #{cellNo},
            salt = #{salt},
            updatedate = now()
        where
            userid = #{userId}
    </update>
</mapper>